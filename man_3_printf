.TH man 3 "17 March 2021" "\"_PRINTF MAN PAGE"

.SH NAME
_printf - formatted output conversion

.SH SYNOPSIS
#include "holberton.h"
.TP
#include <stdio.h>
.TP
#include <stdlib.h>
.TP
#include <stdarg.h>
.TP
#include <unistd.h>
.TP
#include <systypes.h>
.TP
#include <string.h>
.TP
int _printf(const char *format, ...);

.SH DESCRIPTION
The functions in the _printf() family are expected to produce output according to a given format as described below. The _printf function writes output to stdout, the standard output stream.

.SH CONVERSION SPECIFIERS
A character that specifies the type of conversion to be applied. The conversion specifiers and their meanings are:
.TP
.BR c
If no l modifier is present, the int argument is converted to an unsigned char, and the resulting character is written.
.TP
.BR s
If no l modifier is present: the const char * argument is expected to be a pointer to an array of character type
(pointer to a string).  Characters from the array are written up to (but not including) a terminating null byte('\0').
.TP
.BR d,i
The int argument is converted to signed decimal notation.  The precision, if any, gives the minimum number of digits that  must appear;  if  the converted  value  requires fewer digits, it is padded on the left with zeros. The default precision is 1.  When 0  is printed with an explicit precision 0 the output is empty.
.TP
.BR %
A  `%'  is  written.  No argument is converted. The complete conversion specification is `%%'.
.TP
.SH RETURN VALUE
Upon successful return, these functions return the number of characters printed (excluding the null byte used to end output to strings).
If an output error is encountered, a negative value is returned.
.SH SEE ALSO
printf(3)
.SH BUGS
No known bugs.
.SH AUTHOR
Bree Browder, Brian Kong, and Suzanne Allen.